name: Build and Test

on:
  release:
    types: [published]
  pull_request:
    branches: '**'
  push:
    branches:
      - develop

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  CI: true
  MONGO_URL: mongodb://localhost:27017/rocketchat?replicaSet=rs0&directConnection=true
  MONGO_OPLOG_URL: mongodb://mongodb:27017/local?replicaSet=rs0&directConnection=true
  TOOL_NODE_FLAGS: --max_old_space_size=4096
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

jobs:
  yarn-build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3

      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            name/app
            ghcr.io/username/app
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Github Info
        run: echo "hello"

  unit-test:
    runs-on: ubuntu-20.04
    needs: [yarn-build]
    steps:
      - uses: actions/checkout@v3

      - name: Github Info
        run: echo "hello"

  meteor-build:
    runs-on: ubuntu-20.04
    needs: [yarn-build]
    steps:
      - uses: actions/checkout@v3

      - name: Github Info
        run: echo "hello"

  lint:
    runs-on: ubuntu-20.04
    needs: [yarn-build]
    steps:
      - uses: actions/checkout@v3

      - name: Github Info
        run: echo "hello"

  typecheck:
    runs-on: ubuntu-20.04
    needs: [yarn-build]
    steps:
      - uses: actions/checkout@v3

      - name: Github Info
        run: echo "hello"

  translation:
    runs-on: ubuntu-20.04
    needs: [yarn-build]
    steps:
      - uses: actions/checkout@v3

      - name: Github Info
        run: echo "hello"

  api-test:
    runs-on: ubuntu-20.04
    needs: [meteor-build]
    steps:
      - uses: actions/checkout@v3

      - name: Github Info
        run: echo "hello"

  docker-build:
    runs-on: ubuntu-20.04
    needs: [meteor-build]
    steps:
      - uses: actions/checkout@v3

      - name: Github Info
        run: echo "hello"

  ui-test:
    runs-on: ubuntu-20.04
    needs: [meteor-build]
    steps:
      - uses: actions/checkout@v3

      - name: Github Info
        run: echo "hello"
